[{"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\index.js":"1","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\App.js":"2","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\Header\\Header.js":"3","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\LoginPage\\LoginPage.js":"4","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\RegisterPage\\RegisterPage.js":"5","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\MainPage\\MainPage.js":"6","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\Footer\\Footer.js":"7","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\AdminBookPage\\BookTable.js":"8","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\BookDetail\\Book.js":"9","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\ClientBookPage\\BookClient.js":"10","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\Order\\OrderList.js":"11","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\ClientPage\\ClientPage.js":"12"},{"size":290,"mtime":1686241908917,"results":"13","hashOfConfig":"14"},{"size":885,"mtime":1686389005129,"results":"15","hashOfConfig":"14"},{"size":2064,"mtime":1686408757810,"results":"16","hashOfConfig":"14"},{"size":2260,"mtime":1686375226372,"results":"17","hashOfConfig":"14"},{"size":2114,"mtime":1686381973480,"results":"18","hashOfConfig":"14"},{"size":451,"mtime":1686402181152,"results":"19","hashOfConfig":"14"},{"size":482,"mtime":1686389483540,"results":"20","hashOfConfig":"14"},{"size":3997,"mtime":1686407844511,"results":"21","hashOfConfig":"14"},{"size":11196,"mtime":1686402215286,"results":"22","hashOfConfig":"14"},{"size":7016,"mtime":1686407395424,"results":"23","hashOfConfig":"14"},{"size":3980,"mtime":1686408585639,"results":"24","hashOfConfig":"14"},{"size":1647,"mtime":1686392445829,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"4033ib",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\index.js",[],[],[],"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\App.js",[],[],"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\Header\\Header.js",["66"],[],"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\LoginPage\\LoginPage.js",[],[],"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\RegisterPage\\RegisterPage.js",["67"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./RegisterPage.css\";\r\n\r\nconst RegisterPage = () => {\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newUser = {\r\n      username: user.username,\r\n      password: user.password,\r\n      email: user.email,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/user/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newUser),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // kiểm tra xem có thêm user thành công không\r\n        if (data) {\r\n          alert(\"Đăng ký thành công!\");\r\n          window.location.href = \"/login\";\r\n        }\r\n        else {\r\n          alert(\"Tài khoản đã tồn tại!\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Đăng ký không thành công: \" + error.message); // Thông báo lỗi đăng ký\r\n        console.error(error); // In ra lỗi để xử lý\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      <div className=\"register-form\">\r\n        <h2>Register</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={(e) => setUser({ ...user, email: e.target.value })} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input type=\"text\" id=\"username\" onChange={(e) => setUser({ ...user, username: e.target.value })} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={(e) => setUser({ ...user, password: e.target.value })} />\r\n          </div>\r\n          <button type=\"submit\" className=\"register-btn\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\MainPage\\MainPage.js",["68"],[],"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\Footer\\Footer.js",[],[],"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\AdminBookPage\\BookTable.js",[],[],"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\BookDetail\\Book.js",["69"],[],"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\ClientBookPage\\BookClient.js",["70"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./BookClient.css\"\r\nimport moment from \"moment\";\r\n\r\nconst BookClient = () => {\r\n  const params = useParams();\r\n  const id = params.id;\r\n\r\n  const [bookItem, setBookItem] = useState({});\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [rating, setRating] = useState(5);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8080/book/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setBookItem(data))\r\n      .catch((err) => console.log(err));\r\n\r\n    fetch(`http://localhost:8080/rating/idBook?idBook=${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setReviews(data))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  // Xử lý thêm vào giỏ hàng\r\n  const handleAddToCart = () => {\r\n    const order = {\r\n      idUser: localStorage.getItem(\"userId\"),\r\n      idBook: bookItem.id,\r\n      sum: quantity,\r\n    };\r\n\r\n    console.log(order);\r\n\r\n    // Thực hiện gửi yêu cầu đặt hàng đến máy chủ\r\n    fetch(\"http://localhost:8080/orders\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(order)\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          alert(\"Mua thành công!\");\r\n          console.log(\"Order placed successfully\");\r\n        } else {\r\n          alert(\"Failed to place order\");\r\n          console.log(\"Failed to place order\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"Error:\", error));\r\n  };\r\n\r\n  const handleQuantityChange = (event) => {\r\n    setQuantity(parseInt(event.target.value));\r\n  };\r\n\r\n  const handleRatingChange = (event) => {\r\n    setRating(parseInt(event.target.value));\r\n  };\r\n\r\n  const handleCommentChange = (event) => {\r\n    setComment(event.target.value);\r\n  };\r\n\r\n  const handleAddReview = () => {\r\n    // validate rating và comment\r\n    if (rating === 0) {\r\n      alert(\"Vui lòng chọn mức độ yêu thích!\")\r\n      return;\r\n    }\r\n\r\n    if (comment.trim() === \"\") {\r\n      alert(\"Nhập bình luận trước khi đánh giá!\");\r\n      return;\r\n    }\r\n\r\n    // tạo review mới\r\n    const newReview = {\r\n      idBook: id,\r\n      idUser: localStorage.getItem(\"userId\"),\r\n      starCnt: rating,\r\n      comment: comment,\r\n      userName: \"user\"\r\n    };\r\n\r\n    // gửi dữ liệu lên server\r\n    fetch(\"http://localhost:8080/rating\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newReview)\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setReviews([...reviews, data]);\r\n        setRating(5);\r\n        setComment(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n\r\n  // npm install moment: chuyển date từ sql sang dạng dd/mm/yyyy\r\n  function formatMySQLDate(dateFromMySQL) {\r\n    const formattedDate = moment(dateFromMySQL).format(\"DD/MM/YYYY\");\r\n    return formattedDate;\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <img\r\n              src={bookItem.cover}\r\n              alt={bookItem.title}\r\n              className=\"img-fluid\"\r\n            />\r\n          </div>\r\n          <div className=\"col-9\">\r\n            <h2>{bookItem.title}</h2>\r\n            <p>Tác giả: {bookItem.author}</p>\r\n            <p>Thể loại: {bookItem.category}</p>\r\n            <p>Số trang: {bookItem.pageNumber}</p>\r\n            <p>Ngày xuất bản: {bookItem.releaseDate && formatMySQLDate(bookItem.releaseDate)}</p>\r\n\r\n            {\r\n              localStorage.getItem(\"token\") !== null && (\r\n                <div >\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <input\r\n                      className=\"quantity-purchased\"\r\n                      type=\"number\"\r\n                      id=\"quantity\"\r\n                      min=\"1\"\r\n                      value={quantity}\r\n                      onChange={handleQuantityChange}\r\n                    />\r\n                  </div>\r\n                  <button className=\"btn btn-success\" onClick={handleAddToCart}>Đặt mua</button>\r\n                </div>\r\n              )}\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        <h5>Mô tả</h5>\r\n        <p className=\"form-control-static bordered\">\r\n          {\r\n            bookItem.description\r\n              ? bookItem.description\r\n              : \"...\"\r\n          }\r\n        </p>\r\n\r\n        <h5>Đánh giá</h5>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <ul className=\"list-group\">\r\n                  {\r\n                    reviews.map((review) => (\r\n                      <li className=\"list-group-item mb-3\" key={review.id}>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <h5 className=\"mr-2\">{review.userName}</h5>\r\n                          <p>({review.starCnt}/5*)</p>\r\n                        </div>\r\n                        <p>{review.comment}</p>\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            {\r\n              localStorage.getItem(\"token\") === \"client\" && (\r\n                <div className=\"row mb-3\">\r\n                  <div className=\"col-12\">\r\n\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        className=\"form-control col-1\"\r\n                        id=\"rating\" value={rating}\r\n                        onChange={handleRatingChange}\r\n                      >\r\n                        <option value=\"5\">5 stars</option>\r\n                        <option value=\"4\">4 stars</option>\r\n                        <option value=\"3\">3 stars</option>\r\n                        <option value=\"2\">2 stars</option>\r\n                        <option value=\"1\">1 star</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"comment\" rows=\"3\"\r\n                        placeholder=\"Nhập bình luận của bạn...\"\r\n                        value={comment}\r\n                        onChange={handleCommentChange}\r\n                      />\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-primary\" onClick={handleAddReview}>Đánh giá</button>\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookClient;\r\n",[],"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\Order\\OrderList.js",["71"],[],"E:\\PTIT\\BTL_Web\\BTL_FE\\src\\Component\\ClientPage\\ClientPage.js",[],[],{"ruleId":"72","severity":1,"message":"73","line":29,"column":53,"nodeType":"74","messageId":"75","endLine":29,"endColumn":55},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"80","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":34,"column":6,"nodeType":"83","endLine":34,"endColumn":8,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":26,"column":6,"nodeType":"83","endLine":26,"endColumn":8,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"87","line":12,"column":6,"nodeType":"83","endLine":12,"endColumn":8,"suggestions":"88"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id', 'isAdding', and 'isEditing'. Either include them or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["90"],"React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.",["91"],{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [id, isAdding, isEditing]",{"range":"98","text":"99"},"Update the dependencies array to be: [id]",{"range":"100","text":"101"},"Update the dependencies array to be: [fetchOrders]",{"range":"102","text":"103"},[1120,1122],"[id, isAdding, isEditing]",[875,877],"[id]",[336,338],"[fetchOrders]"]